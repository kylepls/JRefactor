package in.kyle.jrefactor.refactor;
public class JavaBaseListener extends AbstractJObjectListener implements JavaListener {
    public void enterOperator(in.kyle.jrefactor.parser.expression.JAssignment.Operator object) {super.enterChildren(object);}
    public void exitOperator(in.kyle.jrefactor.parser.expression.JAssignment.Operator object) {}
    public void enterJAssignment(in.kyle.jrefactor.parser.expression.JAssignment object) {super.enterChildren(object);}
    public void exitJAssignment(in.kyle.jrefactor.parser.expression.JAssignment object) {}
    public void enterJClassInstanceCreationExpression(in.kyle.jrefactor.parser.expression.JClassInstanceCreationExpression object) {super.enterChildren(object);}
    public void exitJClassInstanceCreationExpression(in.kyle.jrefactor.parser.expression.JClassInstanceCreationExpression object) {}
    public void enterJExpression(in.kyle.jrefactor.parser.expression.JExpression object) {super.enterChildren(object);}
    public void exitJExpression(in.kyle.jrefactor.parser.expression.JExpression object) {}
    public void enterJExpressionName(in.kyle.jrefactor.parser.expression.JExpressionName object) {super.enterChildren(object);}
    public void exitJExpressionName(in.kyle.jrefactor.parser.expression.JExpressionName object) {}
    public void enterOperation(in.kyle.jrefactor.parser.expression.JLeftRightExpression.Operation object) {super.enterChildren(object);}
    public void exitOperation(in.kyle.jrefactor.parser.expression.JLeftRightExpression.Operation object) {}
    public void enterJLeftRightExpression(in.kyle.jrefactor.parser.expression.JLeftRightExpression object) {super.enterChildren(object);}
    public void exitJLeftRightExpression(in.kyle.jrefactor.parser.expression.JLeftRightExpression object) {}
    public void enterJMethodInvocation(in.kyle.jrefactor.parser.expression.JMethodInvocation object) {super.enterChildren(object);}
    public void exitJMethodInvocation(in.kyle.jrefactor.parser.expression.JMethodInvocation object) {}
    public void enterJParenthesisExpression(in.kyle.jrefactor.parser.expression.JParenthesisExpression object) {super.enterChildren(object);}
    public void exitJParenthesisExpression(in.kyle.jrefactor.parser.expression.JParenthesisExpression object) {}
    public void enterJTernaryExpression(in.kyle.jrefactor.parser.expression.JTernaryExpression object) {super.enterChildren(object);}
    public void exitJTernaryExpression(in.kyle.jrefactor.parser.expression.JTernaryExpression object) {}
    public void enterJTypeReferenceExpression(in.kyle.jrefactor.parser.expression.JTypeReferenceExpression object) {super.enterChildren(object);}
    public void exitJTypeReferenceExpression(in.kyle.jrefactor.parser.expression.JTypeReferenceExpression object) {}
    public void enterJUnaryExpression(in.kyle.jrefactor.parser.expression.JUnaryExpression object) {super.enterChildren(object);}
    public void exitJUnaryExpression(in.kyle.jrefactor.parser.expression.JUnaryExpression object) {}
    public void enterJIdentifierParameter(in.kyle.jrefactor.parser.expression.lambda.JIdentifierParameter object) {super.enterChildren(object);}
    public void exitJIdentifierParameter(in.kyle.jrefactor.parser.expression.lambda.JIdentifierParameter object) {}
    public void enterJInferredParameters(in.kyle.jrefactor.parser.expression.lambda.JInferredParameters object) {super.enterChildren(object);}
    public void exitJInferredParameters(in.kyle.jrefactor.parser.expression.lambda.JInferredParameters object) {}
    public void enterJLambdaBody(in.kyle.jrefactor.parser.expression.lambda.JLambdaBody object) {super.enterChildren(object);}
    public void exitJLambdaBody(in.kyle.jrefactor.parser.expression.lambda.JLambdaBody object) {}
    public void enterJLambdaExpression(in.kyle.jrefactor.parser.expression.lambda.JLambdaExpression object) {super.enterChildren(object);}
    public void exitJLambdaExpression(in.kyle.jrefactor.parser.expression.lambda.JLambdaExpression object) {}
    public void enterJLambdaParameters(in.kyle.jrefactor.parser.expression.lambda.JLambdaParameters object) {super.enterChildren(object);}
    public void exitJLambdaParameters(in.kyle.jrefactor.parser.expression.lambda.JLambdaParameters object) {}
    public void enterJBooleanLiteral(in.kyle.jrefactor.parser.expression.literal.JBooleanLiteral object) {super.enterChildren(object);}
    public void exitJBooleanLiteral(in.kyle.jrefactor.parser.expression.literal.JBooleanLiteral object) {}
    public void enterJCharacterLiteral(in.kyle.jrefactor.parser.expression.literal.JCharacterLiteral object) {super.enterChildren(object);}
    public void exitJCharacterLiteral(in.kyle.jrefactor.parser.expression.literal.JCharacterLiteral object) {}
    public void enterJDoubleLiteral(in.kyle.jrefactor.parser.expression.literal.JDoubleLiteral object) {super.enterChildren(object);}
    public void exitJDoubleLiteral(in.kyle.jrefactor.parser.expression.literal.JDoubleLiteral object) {}
    public void enterJFloatingLiteral(in.kyle.jrefactor.parser.expression.literal.JFloatingLiteral object) {super.enterChildren(object);}
    public void exitJFloatingLiteral(in.kyle.jrefactor.parser.expression.literal.JFloatingLiteral object) {}
    public void enterJFloatLiteral(in.kyle.jrefactor.parser.expression.literal.JFloatLiteral object) {super.enterChildren(object);}
    public void exitJFloatLiteral(in.kyle.jrefactor.parser.expression.literal.JFloatLiteral object) {}
    public void enterJIntegerLiteral(in.kyle.jrefactor.parser.expression.literal.JIntegerLiteral object) {super.enterChildren(object);}
    public void exitJIntegerLiteral(in.kyle.jrefactor.parser.expression.literal.JIntegerLiteral object) {}
    public void enterJLiteral(in.kyle.jrefactor.parser.expression.literal.JLiteral object) {super.enterChildren(object);}
    public void exitJLiteral(in.kyle.jrefactor.parser.expression.literal.JLiteral object) {}
    public void enterJLongLiteral(in.kyle.jrefactor.parser.expression.literal.JLongLiteral object) {super.enterChildren(object);}
    public void exitJLongLiteral(in.kyle.jrefactor.parser.expression.literal.JLongLiteral object) {}
    public void enterJNumericLiteral(in.kyle.jrefactor.parser.expression.literal.JNumericLiteral object) {super.enterChildren(object);}
    public void exitJNumericLiteral(in.kyle.jrefactor.parser.expression.literal.JNumericLiteral object) {}
    public void enterJStringLiteral(in.kyle.jrefactor.parser.expression.literal.JStringLiteral object) {super.enterChildren(object);}
    public void exitJStringLiteral(in.kyle.jrefactor.parser.expression.literal.JStringLiteral object) {}
    public void enterJObject(in.kyle.jrefactor.parser.JObject object) {super.enterChildren(object);}
    public void exitJObject(in.kyle.jrefactor.parser.JObject object) {}
    public void enterJObjectList(in.kyle.jrefactor.parser.JObjectList object) {super.enterChildren(object);}
    public void exitJObjectList(in.kyle.jrefactor.parser.JObjectList object) {}
    public void enterJBreakStatement(in.kyle.jrefactor.parser.statement.control.JBreakStatement object) {super.enterChildren(object);}
    public void exitJBreakStatement(in.kyle.jrefactor.parser.statement.control.JBreakStatement object) {}
    public void enterJCatchClause(in.kyle.jrefactor.parser.statement.control.JCatchClause object) {super.enterChildren(object);}
    public void exitJCatchClause(in.kyle.jrefactor.parser.statement.control.JCatchClause object) {}
    public void enterJContinueStatement(in.kyle.jrefactor.parser.statement.control.JContinueStatement object) {super.enterChildren(object);}
    public void exitJContinueStatement(in.kyle.jrefactor.parser.statement.control.JContinueStatement object) {}
    public void enterJControlStatement(in.kyle.jrefactor.parser.statement.control.JControlStatement object) {super.enterChildren(object);}
    public void exitJControlStatement(in.kyle.jrefactor.parser.statement.control.JControlStatement object) {}
    public void enterJIfThenElseStatement(in.kyle.jrefactor.parser.statement.control.JIfThenElseStatement object) {super.enterChildren(object);}
    public void exitJIfThenElseStatement(in.kyle.jrefactor.parser.statement.control.JIfThenElseStatement object) {}
    public void enterJIfThenStatement(in.kyle.jrefactor.parser.statement.control.JIfThenStatement object) {super.enterChildren(object);}
    public void exitJIfThenStatement(in.kyle.jrefactor.parser.statement.control.JIfThenStatement object) {}
    public void enterJReturnStatement(in.kyle.jrefactor.parser.statement.control.JReturnStatement object) {super.enterChildren(object);}
    public void exitJReturnStatement(in.kyle.jrefactor.parser.statement.control.JReturnStatement object) {}
    public void enterJSwitchStatement(in.kyle.jrefactor.parser.statement.control.JSwitchStatement object) {super.enterChildren(object);}
    public void exitJSwitchStatement(in.kyle.jrefactor.parser.statement.control.JSwitchStatement object) {}
    public void enterJSynchronizedStatement(in.kyle.jrefactor.parser.statement.control.JSynchronizedStatement object) {super.enterChildren(object);}
    public void exitJSynchronizedStatement(in.kyle.jrefactor.parser.statement.control.JSynchronizedStatement object) {}
    public void enterJThrowStatement(in.kyle.jrefactor.parser.statement.control.JThrowStatement object) {super.enterChildren(object);}
    public void exitJThrowStatement(in.kyle.jrefactor.parser.statement.control.JThrowStatement object) {}
    public void enterJTryStatement(in.kyle.jrefactor.parser.statement.control.JTryStatement object) {super.enterChildren(object);}
    public void exitJTryStatement(in.kyle.jrefactor.parser.statement.control.JTryStatement object) {}
    public void enterJTryWithResourcesStatement(in.kyle.jrefactor.parser.statement.control.JTryWithResourcesStatement object) {super.enterChildren(object);}
    public void exitJTryWithResourcesStatement(in.kyle.jrefactor.parser.statement.control.JTryWithResourcesStatement object) {}
    public void enterJBasicForStatement(in.kyle.jrefactor.parser.statement.control.loops.JBasicForStatement object) {super.enterChildren(object);}
    public void exitJBasicForStatement(in.kyle.jrefactor.parser.statement.control.loops.JBasicForStatement object) {}
    public void enterJDoWhileStatement(in.kyle.jrefactor.parser.statement.control.loops.JDoWhileStatement object) {super.enterChildren(object);}
    public void exitJDoWhileStatement(in.kyle.jrefactor.parser.statement.control.loops.JDoWhileStatement object) {}
    public void enterJEnhancedForStatement(in.kyle.jrefactor.parser.statement.control.loops.JEnhancedForStatement object) {super.enterChildren(object);}
    public void exitJEnhancedForStatement(in.kyle.jrefactor.parser.statement.control.loops.JEnhancedForStatement object) {}
    public void enterJLoopStatement(in.kyle.jrefactor.parser.statement.control.loops.JLoopStatement object) {super.enterChildren(object);}
    public void exitJLoopStatement(in.kyle.jrefactor.parser.statement.control.loops.JLoopStatement object) {}
    public void enterJWhileStatement(in.kyle.jrefactor.parser.statement.control.loops.JWhileStatement object) {super.enterChildren(object);}
    public void exitJWhileStatement(in.kyle.jrefactor.parser.statement.control.loops.JWhileStatement object) {}
    public void enterWhileStatement(in.kyle.jrefactor.parser.statement.control.loops.WhileStatement object) {super.enterChildren(object);}
    public void exitWhileStatement(in.kyle.jrefactor.parser.statement.control.loops.WhileStatement object) {}
    public void enterJAssertStatement(in.kyle.jrefactor.parser.statement.JAssertStatement object) {super.enterChildren(object);}
    public void exitJAssertStatement(in.kyle.jrefactor.parser.statement.JAssertStatement object) {}
    public void enterJBlock(in.kyle.jrefactor.parser.statement.JBlock object) {super.enterChildren(object);}
    public void exitJBlock(in.kyle.jrefactor.parser.statement.JBlock object) {}
    public void enterJEmptyStatement(in.kyle.jrefactor.parser.statement.JEmptyStatement object) {super.enterChildren(object);}
    public void exitJEmptyStatement(in.kyle.jrefactor.parser.statement.JEmptyStatement object) {}
    public void enterJExpressionStatement(in.kyle.jrefactor.parser.statement.JExpressionStatement object) {super.enterChildren(object);}
    public void exitJExpressionStatement(in.kyle.jrefactor.parser.statement.JExpressionStatement object) {}
    public void enterJLabledStatement(in.kyle.jrefactor.parser.statement.JLabledStatement object) {super.enterChildren(object);}
    public void exitJLabledStatement(in.kyle.jrefactor.parser.statement.JLabledStatement object) {}
    public void enterJLocalVariableDeclaration(in.kyle.jrefactor.parser.statement.JLocalVariableDeclaration object) {super.enterChildren(object);}
    public void exitJLocalVariableDeclaration(in.kyle.jrefactor.parser.statement.JLocalVariableDeclaration object) {}
    public void enterJStatement(in.kyle.jrefactor.parser.statement.JStatement object) {super.enterChildren(object);}
    public void exitJStatement(in.kyle.jrefactor.parser.statement.JStatement object) {}
    public void enterAnnotationBase(in.kyle.jrefactor.parser.unit.AnnotationBase object) {super.enterChildren(object);}
    public void exitAnnotationBase(in.kyle.jrefactor.parser.unit.AnnotationBase object) {}
    public void enterJAnnotationBody(in.kyle.jrefactor.parser.unit.body.annotationtype.JAnnotationBody object) {super.enterChildren(object);}
    public void exitJAnnotationBody(in.kyle.jrefactor.parser.unit.body.annotationtype.JAnnotationBody object) {}
    public void enterJAnnotationMember(in.kyle.jrefactor.parser.unit.body.annotationtype.JAnnotationMember object) {super.enterChildren(object);}
    public void exitJAnnotationMember(in.kyle.jrefactor.parser.unit.body.annotationtype.JAnnotationMember object) {}
    public void enterJAnnotationTypeElement(in.kyle.jrefactor.parser.unit.body.annotationtype.JAnnotationTypeElement object) {super.enterChildren(object);}
    public void exitJAnnotationTypeElement(in.kyle.jrefactor.parser.unit.body.annotationtype.JAnnotationTypeElement object) {}
    public void enterJElementValue(in.kyle.jrefactor.parser.unit.body.annotationtype.JElementValue object) {super.enterChildren(object);}
    public void exitJElementValue(in.kyle.jrefactor.parser.unit.body.annotationtype.JElementValue object) {}
    public void enterJClassBody(in.kyle.jrefactor.parser.unit.body.classtype.JClassBody object) {super.enterChildren(object);}
    public void exitJClassBody(in.kyle.jrefactor.parser.unit.body.classtype.JClassBody object) {}
    public void enterJClassInitializer(in.kyle.jrefactor.parser.unit.body.classtype.JClassInitializer object) {super.enterChildren(object);}
    public void exitJClassInitializer(in.kyle.jrefactor.parser.unit.body.classtype.JClassInitializer object) {}
    public void enterJClassInstanceInitializer(in.kyle.jrefactor.parser.unit.body.classtype.JClassInstanceInitializer object) {super.enterChildren(object);}
    public void exitJClassInstanceInitializer(in.kyle.jrefactor.parser.unit.body.classtype.JClassInstanceInitializer object) {}
    public void enterJClassMember(in.kyle.jrefactor.parser.unit.body.classtype.JClassMember object) {super.enterChildren(object);}
    public void exitJClassMember(in.kyle.jrefactor.parser.unit.body.classtype.JClassMember object) {}
    public void enterJClassStaticInitializer(in.kyle.jrefactor.parser.unit.body.classtype.JClassStaticInitializer object) {super.enterChildren(object);}
    public void exitJClassStaticInitializer(in.kyle.jrefactor.parser.unit.body.classtype.JClassStaticInitializer object) {}
    public void enterJField(in.kyle.jrefactor.parser.unit.body.classtype.JField object) {super.enterChildren(object);}
    public void exitJField(in.kyle.jrefactor.parser.unit.body.classtype.JField object) {}
    public void enterJEnumBody(in.kyle.jrefactor.parser.unit.body.enumtype.JEnumBody object) {super.enterChildren(object);}
    public void exitJEnumBody(in.kyle.jrefactor.parser.unit.body.enumtype.JEnumBody object) {}
    public void enterJEnumConstant(in.kyle.jrefactor.parser.unit.body.enumtype.JEnumConstant object) {super.enterChildren(object);}
    public void exitJEnumConstant(in.kyle.jrefactor.parser.unit.body.enumtype.JEnumConstant object) {}
    public void enterJEnumMember(in.kyle.jrefactor.parser.unit.body.enumtype.JEnumMember object) {super.enterChildren(object);}
    public void exitJEnumMember(in.kyle.jrefactor.parser.unit.body.enumtype.JEnumMember object) {}
    public void enterJInterfaceBody(in.kyle.jrefactor.parser.unit.body.interfacetype.JInterfaceBody object) {super.enterChildren(object);}
    public void exitJInterfaceBody(in.kyle.jrefactor.parser.unit.body.interfacetype.JInterfaceBody object) {}
    public void enterJInterfaceMember(in.kyle.jrefactor.parser.unit.body.interfacetype.JInterfaceMember object) {super.enterChildren(object);}
    public void exitJInterfaceMember(in.kyle.jrefactor.parser.unit.body.interfacetype.JInterfaceMember object) {}
    public void enterJInterfaceMethod(in.kyle.jrefactor.parser.unit.body.interfacetype.JInterfaceMethod object) {super.enterChildren(object);}
    public void exitJInterfaceMethod(in.kyle.jrefactor.parser.unit.body.interfacetype.JInterfaceMethod object) {}
    public void enterJArgumentList(in.kyle.jrefactor.parser.unit.body.JArgumentList object) {super.enterChildren(object);}
    public void exitJArgumentList(in.kyle.jrefactor.parser.unit.body.JArgumentList object) {}
    public void enterJConstructorDeclaration(in.kyle.jrefactor.parser.unit.body.JConstructorDeclaration object) {super.enterChildren(object);}
    public void exitJConstructorDeclaration(in.kyle.jrefactor.parser.unit.body.JConstructorDeclaration object) {}
    public void enterJMember(in.kyle.jrefactor.parser.unit.body.JMember object) {super.enterChildren(object);}
    public void exitJMember(in.kyle.jrefactor.parser.unit.body.JMember object) {}
    public void enterJMemberList(in.kyle.jrefactor.parser.unit.body.JMemberList object) {super.enterChildren(object);}
    public void exitJMemberList(in.kyle.jrefactor.parser.unit.body.JMemberList object) {}
    public void enterJMethod(in.kyle.jrefactor.parser.unit.body.JMethod object) {super.enterChildren(object);}
    public void exitJMethod(in.kyle.jrefactor.parser.unit.body.JMethod object) {}
    public void enterJMethodHeader(in.kyle.jrefactor.parser.unit.body.JMethodHeader object) {super.enterChildren(object);}
    public void exitJMethodHeader(in.kyle.jrefactor.parser.unit.body.JMethodHeader object) {}
    public void enterJParameter(in.kyle.jrefactor.parser.unit.body.JParameter object) {super.enterChildren(object);}
    public void exitJParameter(in.kyle.jrefactor.parser.unit.body.JParameter object) {}
    public void enterJTypeBody(in.kyle.jrefactor.parser.unit.body.JTypeBody object) {super.enterChildren(object);}
    public void exitJTypeBody(in.kyle.jrefactor.parser.unit.body.JTypeBody object) {}
    public void enterJVariable(in.kyle.jrefactor.parser.unit.body.JVariable object) {super.enterChildren(object);}
    public void exitJVariable(in.kyle.jrefactor.parser.unit.body.JVariable object) {}
    public void enterJVariableInitializer(in.kyle.jrefactor.parser.unit.body.JVariableInitializer object) {super.enterChildren(object);}
    public void exitJVariableInitializer(in.kyle.jrefactor.parser.unit.body.JVariableInitializer object) {}
    public void enterVariableHolder(in.kyle.jrefactor.parser.unit.body.VariableHolder object) {super.enterChildren(object);}
    public void exitVariableHolder(in.kyle.jrefactor.parser.unit.body.VariableHolder object) {}
    public void enterJAnnotatable(in.kyle.jrefactor.parser.unit.JAnnotatable object) {super.enterChildren(object);}
    public void exitJAnnotatable(in.kyle.jrefactor.parser.unit.JAnnotatable object) {}
    public void enterJAnnotation(in.kyle.jrefactor.parser.unit.JAnnotation object) {super.enterChildren(object);}
    public void exitJAnnotation(in.kyle.jrefactor.parser.unit.JAnnotation object) {}
    public void enterJElementPair(in.kyle.jrefactor.parser.unit.JAnnotationValue.JElementPair object) {super.enterChildren(object);}
    public void exitJElementPair(in.kyle.jrefactor.parser.unit.JAnnotationValue.JElementPair object) {}
    public void enterJPairCollection(in.kyle.jrefactor.parser.unit.JAnnotationValue.JPairCollection object) {super.enterChildren(object);}
    public void exitJPairCollection(in.kyle.jrefactor.parser.unit.JAnnotationValue.JPairCollection object) {}
    public void enterJSingleValue(in.kyle.jrefactor.parser.unit.JAnnotationValue.JSingleValue object) {super.enterChildren(object);}
    public void exitJSingleValue(in.kyle.jrefactor.parser.unit.JAnnotationValue.JSingleValue object) {}
    public void enterJAnnotationValue(in.kyle.jrefactor.parser.unit.JAnnotationValue object) {super.enterChildren(object);}
    public void exitJAnnotationValue(in.kyle.jrefactor.parser.unit.JAnnotationValue object) {}
    public void enterJArrayTypeName(in.kyle.jrefactor.parser.unit.JArrayTypeName object) {super.enterChildren(object);}
    public void exitJArrayTypeName(in.kyle.jrefactor.parser.unit.JArrayTypeName object) {}
    public void enterJCompilationUnit(in.kyle.jrefactor.parser.unit.JCompilationUnit object) {super.enterChildren(object);}
    public void exitJCompilationUnit(in.kyle.jrefactor.parser.unit.JCompilationUnit object) {}
    public void enterJIdentifier(in.kyle.jrefactor.parser.unit.JIdentifier object) {super.enterChildren(object);}
    public void exitJIdentifier(in.kyle.jrefactor.parser.unit.JIdentifier object) {}
    public void enterJImport(in.kyle.jrefactor.parser.unit.JImport object) {super.enterChildren(object);}
    public void exitJImport(in.kyle.jrefactor.parser.unit.JImport object) {}
    public void enterJModifier(in.kyle.jrefactor.parser.unit.JModifier object) {super.enterChildren(object);}
    public void exitJModifier(in.kyle.jrefactor.parser.unit.JModifier object) {}
    public void enterJPackage(in.kyle.jrefactor.parser.unit.JPackage object) {super.enterChildren(object);}
    public void exitJPackage(in.kyle.jrefactor.parser.unit.JPackage object) {}
    public void enterJParameterList(in.kyle.jrefactor.parser.unit.JParameterList object) {super.enterChildren(object);}
    public void exitJParameterList(in.kyle.jrefactor.parser.unit.JParameterList object) {}
    public void enterJThrowsList(in.kyle.jrefactor.parser.unit.JThrowsList object) {super.enterChildren(object);}
    public void exitJThrowsList(in.kyle.jrefactor.parser.unit.JThrowsList object) {}
    public void enterJReferenceTypeArgument(in.kyle.jrefactor.parser.unit.JTypeArgument.JReferenceTypeArgument object) {super.enterChildren(object);}
    public void exitJReferenceTypeArgument(in.kyle.jrefactor.parser.unit.JTypeArgument.JReferenceTypeArgument object) {}
    public void enterType(in.kyle.jrefactor.parser.unit.JTypeArgument.JWildcardTypeArgument.Type object) {super.enterChildren(object);}
    public void exitType(in.kyle.jrefactor.parser.unit.JTypeArgument.JWildcardTypeArgument.Type object) {}
    public void enterJWildcardTypeArgument(in.kyle.jrefactor.parser.unit.JTypeArgument.JWildcardTypeArgument object) {super.enterChildren(object);}
    public void exitJWildcardTypeArgument(in.kyle.jrefactor.parser.unit.JTypeArgument.JWildcardTypeArgument object) {}
    public void enterJTypeArgument(in.kyle.jrefactor.parser.unit.JTypeArgument object) {super.enterChildren(object);}
    public void exitJTypeArgument(in.kyle.jrefactor.parser.unit.JTypeArgument object) {}
    public void enterJTypeDeclaration(in.kyle.jrefactor.parser.unit.JTypeDeclaration object) {super.enterChildren(object);}
    public void exitJTypeDeclaration(in.kyle.jrefactor.parser.unit.JTypeDeclaration object) {}
    public void enterJTypeName(in.kyle.jrefactor.parser.unit.JTypeName object) {super.enterChildren(object);}
    public void exitJTypeName(in.kyle.jrefactor.parser.unit.JTypeName object) {}
    public void enterJTypeParameter(in.kyle.jrefactor.parser.unit.JTypeParameter object) {super.enterChildren(object);}
    public void exitJTypeParameter(in.kyle.jrefactor.parser.unit.JTypeParameter object) {}
    public void enterJTypeParameterList(in.kyle.jrefactor.parser.unit.JTypeParameterList object) {super.enterChildren(object);}
    public void exitJTypeParameterList(in.kyle.jrefactor.parser.unit.JTypeParameterList object) {}
    public void enterModifiable(in.kyle.jrefactor.parser.unit.Modifiable object) {super.enterChildren(object);}
    public void exitModifiable(in.kyle.jrefactor.parser.unit.Modifiable object) {}
    public void enterModifierList(in.kyle.jrefactor.parser.unit.ModifierList object) {super.enterChildren(object);}
    public void exitModifierList(in.kyle.jrefactor.parser.unit.ModifierList object) {}
    public void enterTypeable(in.kyle.jrefactor.parser.unit.Typeable object) {super.enterChildren(object);}
    public void exitTypeable(in.kyle.jrefactor.parser.unit.Typeable object) {}
    public void enterJAnnotationDeclaration(in.kyle.jrefactor.parser.unit.types.JAnnotationDeclaration object) {super.enterChildren(object);}
    public void exitJAnnotationDeclaration(in.kyle.jrefactor.parser.unit.types.JAnnotationDeclaration object) {}
    public void enterJClassDeclaration(in.kyle.jrefactor.parser.unit.types.JClassDeclaration object) {super.enterChildren(object);}
    public void exitJClassDeclaration(in.kyle.jrefactor.parser.unit.types.JClassDeclaration object) {}
    public void enterJEnumDeclaration(in.kyle.jrefactor.parser.unit.types.JEnumDeclaration object) {super.enterChildren(object);}
    public void exitJEnumDeclaration(in.kyle.jrefactor.parser.unit.types.JEnumDeclaration object) {}
    public void enterJInterfaceDeclaration(in.kyle.jrefactor.parser.unit.types.JInterfaceDeclaration object) {super.enterChildren(object);}
    public void exitJInterfaceDeclaration(in.kyle.jrefactor.parser.unit.types.JInterfaceDeclaration object) {}

}